{"version":3,"sources":["addonManager.es6","main.es6","Boot.es6","Menu.es6"],"names":[],"mappings":"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","file":"public\\js\\main.js","sourcesContent":["﻿/**\r\n * Addon manager class - To keep things consistant it works a lot like how Phaser deals with states.\r\n * An addon is basicly a subroutine that displays graphical information to the screen and modifies -\r\n * this information as a reaction to events the game creates\r\n */\r\n\r\nexport default class AddonManager {\r\n    constructor(){\r\n        this._addons = {};\r\n    }\r\n\r\n    add(addonKey, addonCode) {\r\n        this._addons[addonKey] = { name: addonKey, enabled: true, code: addonCode };\r\n    }\r\n\r\n    disableAddon(addonKey) {\r\n        if (!this._addons[addonKey])\r\n            return;\r\n        else\r\n            this._addons[addonKey].enabled = false;\r\n    }\r\n    enableAddon(addonKey) {\r\n        if (!this._addons[addonKey])\r\n            return;\r\n        else\r\n            this._addons[addonKey].enabled = true;\r\n    }\r\n\r\n\r\n    getListOfAddons() {\r\n        var addonList = [];\r\n        for (var addon in this._addons) {\r\n            var currentAddon = this._addons[addon];\r\n            addonList.push([currentAddon.name, currentAddon.enabled]);\r\n        }\r\n        return addonList;\r\n    }\r\n\r\n    /* Loads addons to the current context/state*/\r\n    loadEnabledAddons() {\r\n        for (var addon in this._addons) {\r\n            var currentAddon = this._addons[addon];\r\n            if (currentAddon.enabled)\r\n                currentAddon.code();\r\n        }\r\n    }\r\n}","﻿import Boot from 'src/states/Boot';\r\nimport AddonManager from 'src/gameObjects/addonManager';\r\n// Phaser is imported globally in the html file\r\n\r\nwindow.onload = () => {\r\n\r\n    /**\r\n\t * Force WEBGL since Canvas doesnt support textures / blendmodes which we use heavily.\r\n\t * Automatically starts the boot state aka. application entry point\r\n\t * Note: No need to save this var since all the states have access to it anyway\r\n\t */\r\n\r\n    new PhaserCustomGame('100%', '100%', Phaser.WEBGL, undefined, Boot);\r\n\r\n\r\n};\r\n\r\n/**\r\n * Adding some extra functionality to the Phaser game engine\r\n * Adds the ability to load \"addons\", and a different way to handle keyboard input\r\n */\r\n\r\nclass PhaserCustomGame extends Phaser.Game {\r\n \r\n  \r\n    constructor(width, height, renderer, parent, state, transparent, antialias, physicsConfig) {\r\n        super(width,height,renderer,parent,state,transparent,antialias,physicsConfig);\r\n        this.addons = new AddonManager();\r\n    }\r\n\r\n    /**\r\n     * Keyboard input dispatcher. Sends input to the current state instead of having the redudancy of up a keyboard for each state.\r\n     * @param  {[type]} keyPressData [description]\r\n     * @return {[type]}              [description]\r\n     */\r\n    sendKeyBoardInputToCurrentState(keyPressData) {\r\n        \r\n        var currentState = this.state.getCurrentState();\r\n        if (!currentState.handleKeyBoardInput)\r\n            return;\r\n        else\r\n           currentState.handleKeyBoardInput(keyPressData);\r\n    };\r\n}","/* The Boot state configures the Phaser this.game engine and loads assets */\r\nimport mainMenu from \"./Menu\"\r\nexport default class Boot {\r\n\t// Load assets\r\n    preload() {\r\n        this.game.load.image(\"MenuScreenText\", \"./assets/menu_state_text.png\");\r\n        this.game.load.image(\"MenuScreenBackground\", \"./assets/textures/bg_texture.png\");\r\n        this.game.load.image(\"castbar_texture\", \"./assets/textures/BantoBar.png\");\r\n        this.game.load.image(\"castbar_texture2\", \"./assets/textures/LiteStep.png\");\r\n        this.game.load.image(\"ab_texture\", \"./assets/textures/action_bar_texture.png\");\r\n        this.game.load.image(\"elite\", \"./assets/textures/elite_texture.png\");\r\n        this.game.load.image(\"bg\", \"./assets/play_state_background.png\");\r\n        this.game.load.image(\"icon_5\", \"./assets/icons/spell_holy_powerwordshield.jpg\");\r\n        this.game.load.image(\"icon_2\", \"./assets/icons/power_infusion.jpg\");\r\n        this.game.load.bitmapFont(\"myriad\", \"./assets/fonts/font.png\", \"./assets/fonts/font.xml\");\r\n    }\r\n\r\n    onWindowResize(data) {\r\n        this.game.canvas.height = window.innerHeight;\r\n        this.game.canvas.width = window.innerWidth;\r\n    }\r\n\r\n    create() {\r\n        console.log(this.game);\r\n        // Set scalemode for the this.game.\r\n        this.game.scale.scaleMode = Phaser.ScaleManager.RESIZE;\r\n        this.game.scale.onSizeChange.add((data) => this.onWindowResize(data));\r\n\r\n        // Phaser config\r\n        this.game.time.advancedTiming = true;\r\n        this.game.tweens.frameBased = true;\r\n\r\n        // Register games-states\r\n        this.game.state.add(\"MainMenu\", mainMenu);\r\n        //this.game.state.add(\"Play\", States.Play);\r\n        \r\n        // Setup the keyboard for the this.game.\r\n        this.game.input.keyboard.addCallbacks(this.game, undefined, undefined, this.game.sendKeyBoardInputToCurrentState);\r\n        // Start the post-boot state\r\n        this.game.state.start(\"MainMenu\");\r\n    }\r\n\r\n}\r\n","export default class MainMenu  {\r\n    // Show HTML form on screen. \r\n    // - Options to select player, difficulty,--\r\n    // Validate/Process form input\r\n\r\n    create() {\r\n        this.add.image(0, 0, \"MenuScreenBackground\");\r\n        this.add.image(0, 0, \"MenuScreenText\").blendMode = PIXI.blendModes.ADD;\r\n        //this.printAddonList();\r\n    }\r\n\r\n    printAddonList() {\r\n        var addonList = game.addons.getListOfAddons();\r\n        var lineHeight = 15;\r\n        var headerText = this.add.bitmapText(0, 0, game.defaultFont, \"### REGISTRED ADDONS ###\", 14);\r\n        headerText.tint = 0xFF00FF;\r\n        for (var i = 0; i < addonList.length; i++) {\r\n            this.add.bitmapText(0, lineHeight * i + lineHeight, game.defaultFont, \"## Addon Name: \" + addonList[i][0] + \"  ## Enabled : \" + addonList[i][1], 14);\r\n        }\r\n    }\r\n    \r\n    handleKeyBoardInput(keyCode) {\r\n        console.log(\"starting main\");\r\n    // On any input, the game is started\r\n    game.state.start(\"Play\");\r\n}\r\n}"]}